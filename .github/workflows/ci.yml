name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  windows-x64:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        architecture: [ x64 ]
        configuration: [ debug, release ]
        os: [ windows ]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
        source-url: https://pkgs.dev.azure.com/ronaldvanmanen/_packaging/ronaldvanmanen/nuget/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_DEVOPS_PAT }}
    - run: .\scripts\cibuild.cmd -configuration ${{ matrix.configuration }} -architecture ${{ matrix.architecture }} /p:PlatformTarget=${{ matrix.architecture }}
      shell: cmd
      env: 
        OVERRIDE_RUNTIME_IDENTIFIER: win-x64
    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.os }}_${{ matrix.configuration }}_${{ matrix.architecture }}
        path: |
          .\artifacts\bin\**\*
          .\artifacts\log\**\*
          .\artifacts\pkg\**\*
          .\artifacts\tst\**\*
        if-no-files-found: error
  build-nuget:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
        source-url: https://pkgs.dev.azure.com/ronaldvanmanen/_packaging/ronaldvanmanen/nuget/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_DEVOPS_PAT }}
    - run: .\scripts\cibuild.cmd -configuration release -architecture x64 /p:PlatformTarget=x64
      shell: cmd
      env:
        EXCLUDE_RUN_ID_FROM_PACKAGE: true
        OVERRIDE_RUNTIME_IDENTIFIER: win-x64
    - uses: actions/upload-artifact@v2
      with:
        name: nuget
        path: |
          .\artifacts\bin\**\*
          .\artifacts\log\**\*
          .\artifacts\pkg\**\*
          .\artifacts\tst\**\*
        if-no-files-found: error
  publish-nightlies-azure:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: [ windows-x64, build-nuget ]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: windows_release_x64
        path: ./artifacts
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
        source-url: https://pkgs.dev.azure.com/ronaldvanmanen/_packaging/ronaldvanmanen/nuget/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_DEVOPS_PAT }}
    - run: dotnet nuget push "./artifacts/pkg/Release/*.nupkg" --api-key AzureDevOps
  publish-nightlies-github:
    runs-on: ubuntu-latest
    if: ${{ github.event_name == 'push' }}
    needs: [ windows-x64, build-nuget ]
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: windows_release_x64
        path: ./artifacts
    - uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '5.0.x'
        source-url: https://nuget.pkg.github.com/ronaldvanmanen/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - run: dotnet nuget push "./artifacts/pkg/Release/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }}
