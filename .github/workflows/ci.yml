name: ci

on:
  push:
    branches:
      - 'main'
      - 'release/**'
      - 'develop'
    tags:
      - v*
  pull_request:
    branches:
      - 'main'

jobs:
  build-linux:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        architecture: [ x64 ]
        configuration: [ debug, release ]
        os: [ ubuntu ]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
        source-url: https://pkgs.dev.azure.com/ronaldvanmanen/_packaging/ronaldvanmanen/nuget/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_DEVOPS_PAT }}
    - run: >
        dotnet nuget update source azure
        --username GitHub
        --password ${{ secrets.AZURE_DEVOPS_PAT }}
        --store-password-in-clear-text
    - run: ./scripts/cibuild.sh --configuration ${{ matrix.configuration }} --architecture ${{ matrix.architecture }}
      shell: bash
      env: 
        OVERRIDE_RUNTIME_IDENTIFIER: linux-${{ matrix.architecture }}
    - run: 7z a ./artifacts/${{ matrix.os }}_${{ matrix.configuration }}_${{ matrix.architecture }}.zip ./artifacts/* -sdel
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}_${{ matrix.configuration }}_${{ matrix.architecture }}
        path: ./artifacts/${{ matrix.os }}_${{ matrix.configuration }}_${{ matrix.architecture }}.zip
        if-no-files-found: error
  build-windows:
    runs-on: ${{ matrix.os }}-latest
    strategy:
      matrix:
        architecture: [ x64, x86 ]
        configuration: [ debug, release ]
        os: [ windows ]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
        source-url: https://pkgs.dev.azure.com/ronaldvanmanen/_packaging/ronaldvanmanen/nuget/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_DEVOPS_PAT }}
    - run: >
        dotnet nuget update source azure
        --username GitHub
        --password ${{ secrets.AZURE_DEVOPS_PAT }}
        --store-password-in-clear-text
    - run: .\scripts\cibuild.cmd -configuration ${{ matrix.configuration }} -architecture ${{ matrix.architecture }}
      shell: cmd
      env: 
        OVERRIDE_RUNTIME_IDENTIFIER: win-${{ matrix.architecture }}
    - run: 7z a .\artifacts\${{ matrix.os }}_${{ matrix.configuration }}_${{ matrix.architecture }}.zip .\artifacts\* -sdel
    - uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}_${{ matrix.configuration }}_${{ matrix.architecture }}
        path: .\artifacts\${{ matrix.os }}_${{ matrix.configuration }}_${{ matrix.architecture }}.zip
        if-no-files-found: error
  build-nuget:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
        source-url: https://pkgs.dev.azure.com/ronaldvanmanen/_packaging/ronaldvanmanen/nuget/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_DEVOPS_PAT }}
    - run: >
        dotnet nuget update source azure
        --username GitHub
        --password ${{ secrets.AZURE_DEVOPS_PAT }}
        --store-password-in-clear-text
    - run: .\scripts\cibuild.cmd -configuration release -architecture x64
      shell: cmd
      env:
        EXCLUDE_RUN_ID_FROM_PACKAGE: true
    - run: 7z a .\artifacts\nuget.zip .\artifacts\* -sdel
    - uses: actions/upload-artifact@v3
      with:
        name: nuget
        path: .\artifacts\nuget.zip
        if-no-files-found: error
  publish-nuget-azure:
    runs-on: ubuntu-latest
    needs: [ build-linux, build-windows, build-nuget ]
    steps:
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
        source-url: https://pkgs.dev.azure.com/ronaldvanmanen/_packaging/ronaldvanmanen/nuget/v3/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.AZURE_DEVOPS_PAT }}
    - uses: actions/download-artifact@v3
      with:
        name: nuget
        path: ./artifacts
    - run: 7z x './artifacts/nuget.zip' -o./artifacts/ -y
    - run: dotnet nuget push "./artifacts/pkg/Release/*.nupkg" --api-key AzureDevOps
  publish-nuget-github:
    runs-on: ubuntu-latest
    needs: [ build-linux, build-windows, build-nuget ]
    steps:
    - uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '6.0.x'
        source-url: https://nuget.pkg.github.com/ronaldvanmanen/index.json
      env:
        NUGET_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/download-artifact@v3
      with:
        name: nuget
        path: ./artifacts
    - run: 7z x './artifacts/nuget.zip' -o./artifacts/ -y
    - run: dotnet nuget push "./artifacts/pkg/Release/*.nupkg" --api-key ${{ secrets.GITHUB_TOKEN }}
